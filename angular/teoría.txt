Teoría sobre Angular

- Componente
Controla un trozo de pantalla
o de la vista. Todo en la pantalla es controlado
por este tipo de elementos. 
La lógica de un componente dentro de una clase
en Angular es que da soporte a una vista interactuando
con ella a través de una API con propiedades
y métodos. 
El componente hace mediador entre la vista a través
de la plantilla y la lógica de la app donde se
incuirá el modelo de datos, es decir, una especie
de controlador. 

- Plantillas
Definen la vista de los componentes. Son HTMLs y tienen
sintaxis especial de Angular, trabajando con el databindin
y las directivas. 

- Decoradores y metadatos
Permiten configurar dinámicamente atributos/metadatos
de las clases y componentes. 
Los metadatos describen a las clases pero también
describen relaciones. 
Ejemplo: Un componente y una plantilla, el metadato 
se encargará de decirle a Angular que ese componente
y esa plantilla van juntos, entre otras muchas cosas. 

- Servicios
Clases con el objetivo de facilitar la reutilización,
son un tipo de elemento dentro de la arquitectura de
Angular y mediante la inyección de dependencias los
podemos usar en otros componentes principales digamos.

- Providers
Son servicios que nos proveen de datos o funcionalidades
mediantes sus métodos. Existen providers/servicios propios
de Angular o creados por nosotros mismos. 

- Directivas
Funcionalidades aplicables al DOM y a los elementos HTML
en las plantillas de un componente. Nuevos atributos
para aplicarle a cualquier cosa en nuestra plantilla/vista. 